Contract PositionsCounter(
    mut value: U256,
    mut positionsId: Address,
    mut areAdminsSet: Bool
) {
    enum PositionCounterError {
        NotAdmin = 400
        AdminsAreSet = 401
    }

    pub fn get() -> U256 {
        return value
    }

    @using(updateFields = true, checkExternalCaller = false)
    pub fn setAdmins(positions: Address) -> () {
        assert!(!areAdminsSet, PositionCounterError.AdminsAreSet)
        positionsId = positions
        areAdminsSet = true
    }

    @using(updateFields = true)
    pub fn set(updatedValue: U256) -> () {
        checkCaller!(callerAddress!() == positionsId && areAdminsSet, PositionCounterError.NotAdmin)
        value = updatedValue
    }
}