struct TickmapBatch {
    mut chunks: [U256; 94]
}

Abstract Contract BatchHelper() {
    fn extractChunk(key: ByteVec, chunk: U256) -> U256 {
        let batch = bitmap[key]
        let id = chunk % CHUNKS_PER_BATCH
        return batch.chunks[id]
    }

    fn rewriteChunk(key: ByteVec, chunk: U256, val: U256) -> () {
        let mut batch = bitmap[key]
        let id = chunk % CHUNKS_PER_BATCH
        batch.chunks[id] = val
        bitmap[key] = batch
    }

    // SKIP
    fn getKey(chunk: U256) -> U256 {
        return chunk / CHUNKS_PER_BATCH
    }
    // SKIP_END
}