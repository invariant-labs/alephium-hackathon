TxScript Init(invariant: Invariant) {
    invariant.init{callerAddress!() -> ALPH: 5 alph}()
}

TxScript AddFeeTier(invariant: Invariant, fee: U256, tickSpacing: U256) {
    invariant.addFeeTier{callerAddress!() -> ALPH: 1 alph}(fee, tickSpacing)
}

TxScript RemoveFeeTier(invariant: Invariant, fee: U256, tickSpacing: U256) {
    invariant.removeFeeTier(fee, tickSpacing)
}

TxScript CreatePool(invariant: Invariant, token0: Address, token1: Address, fee: U256, tickSpacing: U256, initSqrtPrice: U256, initTick: I256){
    invariant.createPool{callerAddress!() -> ALPH: 2 alph}(token0, token1, fee, tickSpacing, initSqrtPrice, initTick)
}

TxScript CreateTick(invariant: Invariant, poolKey: ByteVec, tickSpacing: U256, index: I256, poolCurrentIndex: I256, poolFeeGrowthGlobalX: U256, poolFeeGrowthGlobalY: U256, poolStartTimestamp: U256){
    invariant.createTick{callerAddress!() -> ALPH: 1 alph}(poolKey, tickSpacing, index, poolCurrentIndex, poolFeeGrowthGlobalX, poolFeeGrowthGlobalY, poolStartTimestamp)
}

TxScript ChangeProtocolFee(invariant: Invariant, newFee: U256) {
    invariant.changeProtocolFee(newFee)
}

TxScript ChangeFeeReceiver(invariant: Invariant, poolKey: ByteVec, newReceiver: Address) {
    invariant.changeFeeReceiver(poolKey, newReceiver)
}