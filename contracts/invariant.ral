Contract Value(value: U256) {
    pub fn getValue() -> U256 {
      return value
    }
}

Contract Invariant(
    protocolFee: U256
) {
    pub fn getProtocolFee() -> U256 {
        return protocolFee
    }

    @using(preapprovedAssets = true, checkExternalCaller = false)
    pub fn set(key: U256, value: U256) -> () {
        let caller = callerAddress!()

        let contractId = copyCreateSubContract!{caller -> 1 alph}(
            u256To8Bytes!(path),
            barTemplateId,
            encodedImmFields,
            encodedMutFields
        )
    }

    pub fn get(key: U256) -> U256 {
        let path = u256To8Bytes(key)
        let contractId =  subContractId!(path)
        return Value(contractId).getValue()
    }
}
